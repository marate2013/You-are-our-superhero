import java.util.Arrays;
import java.util.ArrayList;

public class TransitCalculator {
  
  int totalDays, totalRides, age;
  String ridePass[] = {"Single Ride", "7 Day Unlimited", "30 Day Unlimited"};
  double passCost[] = {2.75, 33, 127};
  double[] period = {1, 7, 30};
  
  public TransitCalculator (int numDays, int numRides, int passangersAge) {
    totalDays = numDays;
    totalRides = numRides;
    age = passangersAge;
  }
  
  public double unlimited7Price() {
    double periods = (double)Math.ceil(totalDays / period[1]);
    double passCost7 = (passCost[1] * periods) / totalRides;
    passCost7 = passCost7 * 100;
    int i = (int) Math.round(passCost7);
    passCost7 = (double)i / 100;
    return passCost7;
  }
  
  public double unlimited30Price() {
    double periods = (double)Math.ceil(totalDays / period[2]);
    double passCost30 = (passCost[2] * periods) / totalRides;
    passCost30 = passCost30 * 100;
    int i = (int) Math.round(passCost30);
    passCost30 = (double)i / 100;
    return passCost30;
  }
  
  public double[] getRidePrices() {
    double passCosts[] = {passCost[0], unlimited7Price(), unlimited30Price()};

    return passCosts;
  }

  //выбираем самый оптимальный проездной
  public String getBestFare() {
    double bestFare = getRidePrices()[0];
    for (double num : getRidePrices()) {
      if (num < bestFare) {
        bestFare = num;
      }
    }
    ArrayList<Double> copyArray = new ArrayList<Double>();
    copyArray.add(getRidePrices()[0]);
    copyArray.add(getRidePrices()[1]);
    copyArray.add(getRidePrices()[2]);
    int a = copyArray.indexOf(bestFare);
    if (age >= 65) {
      bestFare = bestFare / 2;
      return "You should get the <<" + ridePass[a] + ">> at $" + bestFare + " per ride. (Aged/Disabled passanger)";
    }
    return "You should get the <<" + ridePass[a] + ">> at $" + bestFare + " per ride.";
    
  }
   public static void main (String[] args) {
    TransitCalculator one = new TransitCalculator(Integer.parseInt(args[0]), Integer.parseInt(args[1]), Integer.parseInt(args[2]));
    System.out.println(one.getBestFare());
  }
}
